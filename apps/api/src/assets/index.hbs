<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ideal-octo-chainsaw</title>
  <link rel="icon" type="image/x-icon" href="favicon.ico">
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      font-family: Arial, sans-serif;
    }
    #mapCanvas {
      border: 1px solid black;
    }
    .mapList {
      position: absolute;
      top: 10px;
      left: 10px;
      border: 1px solid black;
      background: white;
    }
    .mapItem {
      padding: 5px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .mapName {
      cursor: pointer;
    }
    .deleteButton {
      background: black;
      color: white;
      border: none;
      padding: 3px 6px;
      margin-left: 9px;
      cursor: pointer;
    }
    .active {
      font-weight: bold;
    }
  </style>
</head>
<body>
  <input type="hidden" id="mapId" value="{{mapId}}">

  <div class="mapList">
    {{#each mapIds}}
      <div class="mapItem">
        <span
          class="mapName"
          onclick="window.location.href = '/{{this}}'"
        >
          {{this}}
        </span>
        <button
          class="deleteButton"
          onclick="fetch('/{{this}}', { method: 'DELETE' }).then(() => window.location.href = '/')"
        >
          Delete
        </button>
      </div>
    {{/each}}
  </div>

  <canvas id="mapCanvas" width="500" height="500"></canvas>

  <script>
    const LEVEL_COLOR_MAP = {
      '0': '#0f3865',
      '1': '#d1a663',
      '2': '#90aa43',
      '3': '#488445',
      '4': '#647192',
      '5': '#8c9db3',
      '-1': '#313131',
      '-2': '#ababab',
      '-3': '#969696',
      '-4': '#6b6b6b',
      '-5': '#717171',
      '-6': '#9a9a9a'
    };

    window.onload = () => {
      const mapId = document.getElementById('mapId').value;

      for (element of document.querySelectorAll('.mapName'))
        if (element.textContent.trim() === mapId) element.classList.add('active');

      const canvas = document.getElementById('mapCanvas');
      const ctx = canvas.getContext('2d');

      const fillCanvas = async (longitude = 0) => {
        const response = await fetch(`${mapId}/json?longitude=${longitude}`);
        const { coordinates } = await response.json();

        for (let latitude = 0; latitude < coordinates.length; latitude++)
          if (coordinates[latitude] !== null) {
            ctx.clearRect(latitude, longitude, 1, 1);
            ctx.fillStyle = LEVEL_COLOR_MAP[coordinates[latitude].toString()];
            ctx.fillRect(latitude, longitude, 1, 1);
          }

        return fillCanvas(longitude === 499 ? 0 : ++longitude);
      }
      fillCanvas();
    };
  </script>
</body>
</html>
